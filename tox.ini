# Copyright 2024 developer
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = format, lint, unit
min_version = 4.0.0

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
deps = -r requirements-dev.txt
set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=pdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:format]
description = Apply coding style standards to code

[testenv:format-{black,codespell,ruff}]
description = Apply coding style standards to code
base = testenv
labels=format
commands =
    black: black {[vars]all_path} {posargs}
    codespell: codespell --write-changes {posargs}
    ruff: ruff --fix {[vars]all_path} {posargs}

[testenv:lint]
description = Check code against coding style standards

[testenv:lint-{black,codespell,pyright,ruff}]
description = Check code against coding style standards
labels=lint
allowlist_externals =
    pyright: pyright
commands =
    black: black --check --diff {[vars]all_path} {posargs}
    codespell: codespell {tox_root} {posargs}
    pyright: pyright {posargs}
    ruff: ruff {[vars]all_path} {posargs}

[lint-docs]
find = git ls-files

[testenv:lint-docs]
description = Lint the documentation with sphinx-lint
labels=lint
allowlist_externals = bash, xargs
commands_pre = bash -c '{[lint-docs]find} > {env_tmp_dir}/lint_docs_files'
commands = xargs --no-run-if-empty --arg-file {env_tmp_dir}/lint_docs_files sphinx-lint --max-line-length 80 --enable all {posargs}

[testenv:unit]
description = Run unit tests
commands =
    coverage run --source={[vars]src_path} \
                 -m pytest \
                 --tb native \
                 -v \
                 -s \
                 {posargs} \
                 {[vars]tests_path}/unit
    coverage report
